c
params[:token]
c
id
c
id
c
object.experiences
c
object.experiences
object.id
c
object.id
c
object.id
id
c
@core_infos.order(:created_at)c
@core_infos.order(:created_at)
@core_infos.order
@core_infos
c
prompt_key
data
c
request.body.read
data
c
data
c
data
c
data['value']
data['key']
data
c
data
c
data
 c
c
params
c
n
c
e
n
e
n
CoreInfo.find(@id).experiences
CoreInfo.find(@id)
 @id = JwtHelper.decrypt(params[:token])
JwtHelper.decrypt(params[:token])
params[:token]
c
JwtHelper.decrypt(params[:token])
(params[:token])
(params[:token]
c
DICTIONARY[key]
message
response
n
message
#{DICTIONARY[key]
key
c
serialized.class
serialized
c
serialized_core_info.class
c
serialized
c
serialized_core_info
serialized_core_info.to_json
serialized_core_info
c
serialized
c
serialized
c
"#{object.name&.downcase&.gsub(' ', '')}@gmail.com"
n
c
CoreInfosIndexSerializer.new(@core_infos).to_json
ActiveModelSerializers::CoreInfosIndexSerializer.new(@core_infos).to_json
c
@core_infos
c
CoreInfosIndexSerializer.new(@core_infos.to_a).to_json
CoreInfosIndexSerializer.new(@core_infos.to_a)
c
 CoreInfosIndexSerializer.new(@core_infos).as_json
 CoreInfosIndexSerializer.new(@core_infos)
 CoreInfosIndexSerializer.new(@core_infos).to_json
serialized_core_infos.to_json
serialized_core_infos.as_json
serialized_core_infos.to_json
serialized_core_infos.to_h
serialized_core_infos
c
tokens
token
n
@core_infos.pluck(:id)
v
c
tokens
n
 @core_infos.pluck(:id)
c
@core_infos.pluck(:id)
@core_infos
c
@core_infos
c
current_user
@core_infos
c
@core_info
@core_infos
c
current_user.core_infos.pluck(:id)
current_user.core_infos.pluck(:id).as_json
current_user.core_infos.as_json
current_user.core_infos
c
@core_infos
c
payload['resource_id']
payload['data']
field
c
field
params
c
field
c
params['field'].to_sym
DICTIONARY[params['field'].to_sym]
DICTIONARY[params['field']]
DICTIONARY
params['field']
 payload['data']
payload['resource_id']
field
c
payload['resource_id']
field = params['field']
params['field']
payload = params['data']
params['data']
params
c
core_info.experiences.find("22eb4dad-d134-452b-aa8f-2806d9e53f25")
core_info.experiences
core_info
c
JwtHelper.decrypt(params[:token])
c
params['data']
params
params['token']
c
JwtHelper.decrypt(params[:token])
c
params['token']
params
c
v
{params['field']=> params['data']}
params['field']=> params['data']
params['field']: params['data']
{params['field']: params['data']}
params['data']
params['field']
params
arams
c
params.keys.first
params['about']
params.keys
params["core_infos_transaction"]
params.keys
params
params['putData']
c
DICTIONARY[key]
message
c
data
prompt_key
c
DICTIONARY[key.to_sym]
key
DICTIONARY
DICTIONARY[key]
c
data
prompt_key
c
data[data.keys[0]]
data.keys[0]
data[data.keys.pick]
data[data.keys.first]
data.keys.first
data.keys
data.keyss
data
c
message
response
e
c
params['putData']
=> 12:         core_info.update!(about_text: params['putData']
exit
params
 params['data']
c
params['data']
params
params['data']['message']
core_info
c
CoreInfo.find(@id)
@id = JwtHelper.decrypt(params[:token])
params
@id
@i
c@i
c
core_info.update(about_text: params['data']['message'])
core_info.update(params['data']['message'])
core_info
c
params['token']
params['data']['message']
params['data']['message]
params['data']
params
c
params
c
params['data']
params
c
params
c
params
c
exit
e
c
e
